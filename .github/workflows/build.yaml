name: Build Tauri App

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install Homebrew for Intel (macOS only)
        if: matrix.platform == 'macos-latest' && matrix.args == '--target x86_64-apple-darwin'
        run: |
          # Check if the Intel Homebrew directory exists. If not, install it.
          if [ ! -d "/usr/local/Homebrew" ]; then
            echo "Installing Homebrew for x86_64..."
            arch -x86_64 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          fi

      - name: Install OpenSSL (macOS only)
        if: matrix.platform == 'macos-latest'
        run: |
          # Install ARM version (native for the runner)
          brew install openssl@3
          if [ -d "/usr/local/Homebrew" ]; then
            # Install x86_64 version
            arch -x86_64 /usr/local/bin/brew install openssl@3
          fi

      - name: Install vcpkg dependencies (Windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          .\vcpkg\bootstrap-vcpkg.bat
          .\vcpkg\vcpkg.exe install openssl:x64-windows

      - name: Install frontend dependencies
        run: npm ci

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli@latest

      - name: Build Tauri app (non-MacOS)
        if: matrix.platform != 'macos-latest'
        uses: tauri-apps/tauri-action@v0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Set VCPKG env vars for Windows builds
          VCPKG_ROOT: "${{ github.workspace }}\\vcpkg"
          VCPKGRS_DYNAMIC: 1
        with:
          args: ${{ matrix.args }}
          tauriScript: tauri

      - name: Build Tauri app (MacOS)
        if: matrix.platform == 'macos-latest'
        uses: tauri-apps/tauri-action@v0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # openssl Intel is installed in /usr/local/opt/openssl, ARM version in /opt/homebrew/opt/openssl
          OPENSSL_DIR: ${{ (contains(matrix.args, 'aarch64') && '/opt/homebrew/opt/openssl@3' || '/usr/local/opt/openssl@3') || '' }}
        with:
          args: ${{ matrix.args }}
          tauriScript: tauri
