name: 'publish'

on:
  push:
    tags:
      - 'v*'

# This workflow will trigger on each push of vx.y.z tags, e.g. v0.1.2 to create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
  publish-tauri-mac-outside:
    name: Build macOS Outside Store
    environment: macos-sign
    timeout-minutes: 60
    permissions:
      contents: write
    strategy:
      matrix:
        target: [aarch64-apple-darwin, x86_64-apple-darwin]
    runs-on: 'macos-latest'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch tags # necessary because actions/checkout appears to clobber annotated tags with lightweight tags: https://github.com/actions/checkout/issues/882
        run: git fetch --force --tags

      - name: Debug information
        run: |
          echo "Current working directory: $(pwd)"
          echo "Git ref: ${{ github.ref }}"
          echo "Git sha: ${{ github.sha }}"
          env

      - name: List tags
        run: git tag -l

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: install frontend dependencies
        run: npm ci

      - name: Git describe before
        run: |
          git describe --always --tags --dirty=-modified
          git describe --always --dirty=-modified
          git status

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'Smart Energy Explorer v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: --target ${{ matrix.target }}

      - name: Git describe after
        run: |
          git describe --always --tags --dirty=-modified
          git describe --always --dirty=-modified
          git status
          git diff .

  publish-tauri-linux:
    name: Build Linux
    timeout-minutes: 15
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch tags # necessary because actions/checkout appears to clobber annotated tags with lightweight tags: https://github.com/actions/checkout/issues/882
        run: git fetch --force --tags

      - name: Debug information
        run: |
          echo "Current working directory: $(pwd)"
          echo "Git ref: ${{ github.ref }}"
          echo "Git sha: ${{ github.sha }}"
          env

      - name: List tags
        run: git tag -l

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install dependencies (ubuntu only)
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: install frontend dependencies
        run: npm ci

      - name: Git describe before
        run: |
          git describe --always --tags --dirty=-modified
          git describe --always --dirty=-modified
          git status

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'Smart Energy Explorer v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ''

      - name: Git describe after
        run: |
          git describe --always --tags --dirty=-modified
          git describe --always --dirty=-modified
          git status
          git diff .

  publish-tauri-windows:
    name: Build Windows
    timeout-minutes: 15
    permissions:
      contents: write
    runs-on: 'windows-latest'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch tags # necessary because actions/checkout appears to clobber annotated tags with lightweight tags: https://github.com/actions/checkout/issues/882
        run: git fetch --force --tags

      - name: Debug information
        run: |
          echo "Current working directory: $(pwd)"
          echo "Git ref: ${{ github.ref }}"
          echo "Git sha: ${{ github.sha }}"
          env

      - name: List tags
        run: git tag -l

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install frontend dependencies
        run: npm ci

      - name: Git describe before
        run: |
          git describe --always --tags --dirty=-modified
          git describe --always --dirty=-modified
          git status

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'Smart Energy Explorer v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ''

      - name: Git describe after
        run: |
          git describe --always --tags --dirty=-modified
          git describe --always --dirty=-modified
          git status
          git diff .
